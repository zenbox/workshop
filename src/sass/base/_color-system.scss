@function luminance($color) {
    $r: red($color) / 255;
    $g: green($color) / 255;
    $b: blue($color) / 255;

    $r: if($r < 0.03928, $r / 12.92, pow(($r + 0.055) / 1.055, 2.4));
    $g: if($g < 0.03928, $g / 12.92, pow(($g + 0.055) / 1.055, 2.4));
    $b: if($b < 0.03928, $b / 12.92, pow(($b + 0.055) / 1.055, 2.4));

    @return 0.2126 * $r + 0.7152 * $g + 0.0722 * $b;
}

// Funktion, die basierend auf der Luminanz entscheidet, ob Weiß oder Schwarz als Textfarbe verwendet wird
@function contrast-color($background-color) {
    @if (luminance($background-color) > 0.179) {
        @return #000000; // Schwarz für helle Hintergründe
    } @else {
        @return #ffffff; // Weiß für dunkle Hintergründe
    }
}

:root {
    // Hell-/Dunkelwerte
    $white: hsla(0, 0%, 85%, 1);
    --color-white: #{$white};
    --on-color-white: #{contrast-color($white)};

    $black: hsla(0, 0%, 15%, 1);
    --color-white-high-contrast: #{$black};
    --on-color-white-high-contrast: #{contrast-color($black)};

    $grey: hsla(0, 0%, 50%, 1);
    --color-grey: #{$grey};
    --on-color-grey: #{contrast-color($grey)};

    $black: hsla(0, 0%, 15%, 1);
    --color-black: #{$black};
    --on-color-black: #{contrast-color($black)};

    $black-high-contrast: hsla(0, 0%, 0%, 1);
    --color-black-high-contrast: #{$black-high-contrast};
    --on-color-black-high-contrast: #{contrast-color($black-high-contrast)};

    // Corporate Design Farben
    $primary-color: rgb(79, 0, 104);
    --primary-color: #{$primary-color};
    --on-primary-color: #{contrast-color($primary-color)};

    $secondary-color: rgb(0, 141, 197);
    --secondary-color: #{$secondary-color};
    --on-secondary-color: #{contrast-color($secondary-color)};

    $tertiary-color: rgb(0, 108, 0);
    --tertiary-color: #{$tertiary-color};
    --on-tertiary-color: #{contrast-color($tertiary-color)};

    $quaternary-color: rgb(220, 187, 0);
    --quaternary-color: #{$quaternary-color};
    --on-quaternary-color: #{contrast-color($quaternary-color)};

    $success-color: hsla(120, 100%, 70%, 1);
    --success-color: #{$success-color};
    --on-success-color: #{contrast-color($success-color)};

    $info-color: hsla(240, 100%, 70%, 1);
    --info-color: #{$info-color};
    --on-info-color: #{contrast-color($info-color)};

    $warning-color: hsla(60, 100%, 70%, 1);
    --warning-color: #{$warning-color};
    --on-warning-color: #{contrast-color($warning-color)};

    $error-color: hsla(0, 100%, 70%, 1);
    --error-color: #{$error-color};
    --on-error-color: #{contrast-color($error-color)};

    $link-color: hsla(240, 100%, 50%, 1);
    --link-color: #{$link-color};
    --on-link-color: #{contrast-color($link-color)};

    $link-color-dark: hsla(240, 100%, 50%, 1);
    --link-color-dark: #{$link-color-dark};
    --on-link-color-dark: #{contrast-color($link-color-dark)};

    $visited-color: hsla(240, 100%, 50%, 1);
    --visited-color: #{$visited-color};
    --on-visited-color: #{contrast-color($visited-color)};

    $visited-color-dark: hsla(240, 100%, 50%, 1);
    --visited-color-dark: #{$visited-color-dark};
    --on-visited-color-dark: #{contrast-color($visited-color-dark)};

    $hover-color: hsla(240, 100%, 50%, 1);
    --hover-color: #{$hover-color};
    --on-hover-color: #{contrast-color($hover-color)};

    $hover-color-dark: hsla(240, 100%, 50%, 1);
    --hover-color-dark: #{$hover-color-dark};
    --on-hover-color-dark: #{contrast-color($hover-color-dark)};

    $active-color: hsla(240, 100%, 50%, 1);
    --active-color: #{$active-color};
    --on-active-color: #{contrast-color($active-color)};

    $active-color-dark: hsla(240, 100%, 50%, 1);
    --active-color-dark: #{$active-color-dark};
    --on-active-color-dark: #{contrast-color($active-color-dark)};
}

// Generieren von Klassen für alle Farben
$color-map: (
    "white": (
        "background-color": var(--color-white),
        "color": var(--on-color-white),
    ),
    "grey": (
        "background-color": var(--color-grey),
        "color": var(--on-color-grey),
    ),
    "black": (
        "background-color": var(--color-black),
        "color": var(--on-color-black),
    ),
    "primary": (
        "background-color": var(--primary-color),
        "color": var(--on-primary-color),
    ),
    "secondary": (
        "background-color": var(--secondary-color),
        "color": var(--on-secondary-color),
    ),
    "tertiary": (
        "background-color": var(--tertiary-color),
        "color": var(--on-tertiary-color),
    ),
    "quaternary": (
        "background-color": var(--quaternary-color),
        "color": var(--on-quaternary-color),
    ),
    "success": (
        "background-color": var(--success-color),
        "color": var(--on-success-color),
    ),
    "info": (
        "background-color": var(--info-color),
        "color": var(--on-info-color),
    ),
    "warning": (
        "background-color": var(--warning-color),
        "color": var(--on-warning-color),
    ),
    "error": (
        "background-color": var(--error-color),
        "color": var(--on-error-color),
    ),
    "link": (
        "background-color": var(--link-color),
        "color": var(--on-link-color),
    ),
    "link-dark": (
        "background-color": var(--link-color-dark),
        "color": var(--on-link-color-dark),
    ),
    "visited": (
        "background-color": var(--visited-color),
        "color": var(--on-visited-color),
    ),
    "visited-dark": (
        "background-color": var(--visited-color-dark),
        "color": var(--on-visited-color-dark),
    ),
    "hover": (
        "background-color": var(--hover-color),
        "color": var(--on-hover-color),
    ),
    "hover-dark": (
        "background-color": var(--hover-color-dark),
        "color": var(--on-hover-color-dark),
    ),
    "active": (
        "background-color": var(--active-color),
        "color": var(--on-active-color),
    ),
    "active-dark": (
        "background-color": var(--active-color-dark),
        "color": var(--on-active-color-dark),
    ),
);

// Generierung der Klassen
@each $color, $map in $color-map {
    .#{$color} {
        background-color: map-get($map, "background-color");
        color: map-get($map, "color");
    }
    .bg-#{$color} {
        background-color: map-get($map, "background-color");
    }
    .text-#{$color} {
        color: map-get($map, "color");
    }
}

// Eigentlich eine eigene Kompenenten-SCSS:
main figure {
    display: flex;
    flex-direction: row;

    gap: 1rem;
}
.color-box {
    display: block;
    width: 3rem;
    height: 3rem;
    border: 1px solid var(--color-black);
}
