$aria-attribute-background-color: hsla(200, 100%, 25%, 0.85);
$aria-attribute-color: hsla(200, 100%, 100%, 0.85);
$semantic-element-background-color: hsla(39, 100%, 35%, 0.85);
$semantic-element-color: hsla(39, 93%, 88%, 0.85);

.developer {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    article,
    figure,
    samp {
        outline: 3px dotted $semantic-element-background-color;
        outline-offset: 1px;
        &::before {
            z-index: 10;
            margin-top: -0.2rem;
            margin-right: -0.5rem;
            display: block;
            position: absolute;
            right: 1rem;
            padding: 0.2rem;
            font-size: 0.8rem;
            color: $semantic-element-color;
            background: $semantic-element-background-color;
        }
    }
    h1::before {
        content: "H1";
    }
    h2::before {
        content: "H2";
    }
    h3::before {
        content: "H3";
    }
    h4::before {
        content: "H4";
    }
    h5::before {
        content: "H5";
    }
    h6::before {
        content: "H6";
    }
    article::before {
        content: "ARTICLE";
    }

    figure::before {
        content: "FIGURE";
    }

samp::before {
        content: "SAMPLE";
    }

    [aria-activedescendant],
    [aria-atomic],
    [aria-autocomplete],
    [aria-busy],
    [aria-checked],
    [aria-controls],
    [aria-current],
    [aria-describedby],
    [aria-disabled],
    [aria-dropeffect],
    [aria-expanded],
    [aria-flowto],
    [aria-grabbed],
    [aria-haspopup],
    [aria-hidden],
    [aria-invalid],
    [aria-label],
    [aria-labelledby],
    [aria-level],
    [aria-live],
    [aria-multiline],
    [aria-multiselectable],
    [aria-orientation],
    [aria-owns],
    [aria-posinset],
    [aria-pressed],
    [aria-selected],
    [aria-readonly],
    [aria-relevant],
    [aria-atomic],
    [aria-required],
    [aria-selected],
    [aria-checked],
    [aria-pressed],
    [aria-setsize],
    [aria-posinset],
    [aria-sort],
    [aria-valuemax],
    [aria-valuemin],
    [aria-valuenow],
    [aria-valuetext] {
        outline: 3px dotted $aria-attribute-background-color;
        outline-offset: 1px;
        &::before {
            z-index: 10;
            margin-top: -0.2rem;
            margin-right: -0.5rem;
            display: block;
            position: absolute;
            right: 1rem;
            padding: 0.2rem;
            font-size: 0.8rem;
            color: $aria-attribute-color;
            background: $aria-attribute-background-color;
        }
    }
    [aria-activedescendant]::before {
        content: "activedescendent = " attr(aria-activedescendant);
    }
    [aria-atomic]::before {
        content: "atomic = " attr(aria-atomic);
    }
    [aria-autocomplete]::before {
        content: "autocomplete = " attr(aria-autocomplete);
    }
    [aria-busy]::before {
        content: "busy = " attr(aria-busy);
    }
    [aria-checked]::before {
        content: "checked = " attr(aria-checked);
    }
    [aria-controls]::before {
        content: "controls = " attr(aria-controls);
    }
    [aria-current]::before {
        content: "current = " attr(aria-current);
    }
    [aria-describedby]::before {
        content: "describedby = " attr(aria-describedby);
    }
    [aria-disabled]::before {
        content: "disabled = " attr(aria-disabled);
    }
    [aria-dropeffect]::before {
        content: "dropeffect = " attr(aria-dropeffect);
    }
    [aria-expanded]::before {
        content: "expanded = " attr(aria-expanded);
    }
    [aria-flowto]::before {
        content: "flowto = " attr(aria-flowto);
    }
    [aria-grabbed]::before {
        content: "grabbed = " attr(aria-grabbed);
    }
    [aria-haspopup]::before {
        content: "haspopup = " attr(aria-haspopup);
    }
    [aria-hidden]::before {
        content: "hidden = " attr(aria-hidden);
    }
    [aria-invalid]::before {
        content: "invalid = " attr(aria-invalid);
    }
    [aria-label]::before {
        content: "label = " attr(aria-label);
    }
    [aria-labelledby]::before {
        content: "labelledby = " attr(aria-labelledby);
    }
    [aria-level]::before {
        content: "level = " attr(aria-level);
    }
    [aria-live]::before {
        content: "live = " attr(aria-live);
    }
    [aria-multiline]::before {
        content: "multiline = " attr(aria-multiline);
    }
    [aria-multiselectable]::before {
        content: "multiselectable = " attr(aria-multiselectable);
    }
    [aria-orientation]::before {
        content: "orientation = " attr(aria-orientation);
    }
    [aria-owns]::before {
        content: "owns = " attr(aria-owns);
    }
    [aria-posinset]::before {
        content: "posinset = " attr(aria-posinset);
    }
    [aria-pressed]::before {
        content: "pressed = " attr(aria-pressed);
    }
    [aria-selected]::before {
        content: "selected = " attr(aria-selected);
    }
    [aria-readonly]::before {
        content: "readonly = " attr(aria-readonly);
    }
    [aria-relevant]::before {
        content: "relevant = " attr(aria-relevant);
    }
    [aria-atomic]::before {
        content: "atomic = " attr(aria-atomic);
    }
    [aria-required]::before {
        content: "required = " attr(aria-required);
    }
    [aria-selected]::before {
        content: "selected = " attr(aria-selected);
    }
    [aria-checked]::before {
        content: "checked = " attr(aria-checked);
    }
    [aria-pressed]::before {
        content: "pressed = " attr(aria-pressed);
    }
    [aria-setsize]::before {
        content: "setsize = " attr(aria-setsize);
    }
    [aria-posinset]::before {
        content: "posinset = " attr(aria-posinset);
    }
    [aria-sort]::before {
        content: "sort = " attr(aria-sort);
    }
    [aria-valuemax]::before {
        content: "valuemax = " attr(aria-valuemax);
    }
    [aria-valuemin]::before {
        content: "valuemin = " attr(aria-valuemin);
    }
    [aria-valuenow]::before {
        content: "valuenow = " attr(aria-valuenow);
    }
    [aria-valuetext]:before {
        content: "valuetext = " attr(aria-valuetext);
    }
}
