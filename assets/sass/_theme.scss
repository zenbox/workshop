

// .theme {
//     color: var(--onPage);
//     background-color: var(--page);
// }

// /* What ist semantic and what is content */
// .semantic header,
// .semantic nav,
// .semantic main,
// .semantic aside,
// .semantic footer {
//     color: var(--onSemanticBox);
//     background-color: var(--semanticBox);
// }

// .theme section,
// .theme article {
//     color: var(--onContentBackground);
//     background-color: var(--contentBackground);
// }


.center {
    text-align: center;
}

.reset,
.reset * {
    margin: 0;
    padding: 0;
}

/* Color circle */
.color-circle svg {
    width: 100%;
    height: 100%;
    fill-rule: evenodd;
    clip-rule: evenodd;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 1.5;
}

.color-circle path {
    stroke: white;
    stroke-width: 4px;
}



.deg-0,
.red {
    background-color: var(--red);
    color: var(--onDark);
    fill: var(--red);
}

.deg-30,
.orange {
    background-color: var(--orange);
    color: var(--onDark);
    fill: var(--orange);
}

.deg-60,
.yellow {
    background-color: var(--yellow);
    color: var(--onBright);
    fill: var(--yellow);
}

.deg-90,
.chartreuse-green {
    background-color: var(--chartreuse-green);
    color: var(--onBright);
    fill: var(--chartreuse-green);
}

.deg-120,
.green {
    background-color: var(--green);
    color: var(--onBright);
    fill: var(--green);
}

.deg-150,
.spring-green {
    background-color: var(--spring-green);
    color: var(--onBright);
    fill: var(--spring-green);
}

.deg-180,
.cyan {
    background-color: var(--cyan);
    color: var(--onBright);
    fill: var(--cyan);
}

.deg-210,
.azure {
    background-color: var(--azure);
    color: var(--onDark);
    fill: var(--azure);
}

.deg-240,
.blue {
    background-color: var(--blue);
    color: var(--onDark);
    fill: var(--blue);
}

.deg-270,
.violet {
    background-color: var(--violet);
    color: var(--onDark);
    fill: var(--violet);
}

.deg-300,
.magenta {
    background-color: var(--magenta);
    color: var(--onDark);
    fill: var(--magenta);
}

.deg-330,
.rose {
    background-color: var(--rose);
    color: var(--onDark);
    fill: var(--rose);
}


.glass {
    opacity: 95%;
}

.elevated {
    transform: perspective(500px) translate3d(0, 0, 0);
    box-shadow: 3px 3px 3px hsla(0, 0%, 15%, 0.5)
}

.elevate:hover {
    transform: perspective(500px) translate3d(1px, 1px, 2px);
    box-shadow: 3px 3px 3px hsla(0, 0%, 15%, 0.5)
}

section:nth-child(odd) {
    background-color: var(--primary);
    color: var(--onPrimary)
}